name: Trunk Build & Deploy

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build: #id
    name: Build 
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.13.0]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 #commands 
    
    - name: Install Node.js
      uses: actions/setup-node@v2 #commands 
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Get Yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use Yarn cache
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    
    - name: Install yarn
      run: yarn install --frozen-lockfile --registry 'https://registry.yarnpkg.com'
    
    - name: Build project
      run: yarn build
    
    - name: Run tests
      run: yarn test

    - name: Upload production-ready build files
      uses: actions/upload-artifact@v2
      with:
        name: production-files
        path: ./build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: 'develop'
    needs: build
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: production-files
        path: ./build
        
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./build

    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
